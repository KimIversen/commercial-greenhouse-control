# Commercial Greenhouse Configuration
homeassistant:
  name: Commercial Greenhouse
  latitude: !secret latitude
  longitude: !secret longitude
  elevation: !secret elevation
  unit_system: metric
  time_zone: Europe/Oslo
  country: "NO"

# HTTP with security
http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 172.20.0.0/16
    - 127.0.0.1
  ip_ban_enabled: true
  login_attempts_threshold: 5

# Database â€“ High-performance MariaDB
recorder:
  db_url: !secret db_url
  purge_keep_days: 365
  auto_purge: true
  commit_interval: 1

# Cloud integration
cloud:

# MQTT configuration - all sensors moved to mqtt.yaml
mqtt: !include mqtt.yaml

# Notifications
notify:
  - platform: smtp
    name: critical_alerts
    server: !secret smtp_server
    port: 587
    sender: !secret smtp_sender
    username: !secret smtp_username
    password: !secret smtp_password
    recipient:
      - !secret admin_email

# Essential components
api:
logger:
  default: warning
  logs:
    homeassistant.components.recorder: info
system_health:
mobile_app:
frontend:
config:

# Lovelace YAML mode
lovelace:
  mode: yaml
  resources:
    - url: /hacsfiles/mini-graph-card/mini-graph-card-bundle.js
      type: module
    - url: /hacsfiles/button-card/button-card.js
      type: module

# Include all configuration files
automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

# All sensors (system monitoring, SQL, template) moved to sensors.yaml
sensor: !include sensors.yaml
binary_sensor: !include sensors.yaml
template: !include sensors.yaml
input_boolean: !include sensors.yaml
input_datetime: !include sensors.yaml
input_button: !include sensors.yaml

# Shell commands for container monitoring and backup
shell_command:
  check_homeassistant_container: 'docker ps --format "table {{.Names}}\t{{.Status}}" | grep homeassistant | grep -q "Up" && echo "online" || echo "offline"'
  check_mariadb_container: 'docker ps --format "table {{.Names}}\t{{.Status}}" | grep mariadb | grep -q "Up" && echo "online" || echo "offline"'
  check_mosquitto_container: 'docker ps --format "table {{.Names}}\t{{.Status}}" | grep mosquitto | grep -q "Up" && echo "online" || echo "offline"'
  check_esphome_container: 'docker ps --format "table {{.Names}}\t{{.Status}}" | grep esphome | grep -q "Up" && echo "online" || echo "offline"'
  manual_backup: "/config/scripts/backup.sh"


# Zones
zone:
  - name: Greenhouse
    latitude: !secret latitude
    longitude: !secret longitude
    radius: 100
    icon: mdi:greenhouse
